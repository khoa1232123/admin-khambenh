{"version":3,"sources":["helpers/index.jsx","views/khambenh/Thuoc/ModalThuoc.jsx","views/khambenh/Thuoc/index.jsx"],"names":["randomMaso","prefix","random","Math","floor","replace","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatInputDate","ModalThuoc","modal","setModal","oldThuoc","dispatch","useDispatch","useState","thuoc","setThuoc","handleChange","e","console","log","name","target","value","useEffect","closeModal","show","onClose","closeButton","action","method","className","row","md","htmlFor","xs","id","type","placeholder","ten","onChange","huongdansudung","rows","color","onClick","Object","keys","createThuoc","updateThuoc","Thuoc","setOldThuoc","thuocs","useSelector","state","getThuocs","lg","style","display","justifyContent","alignItems","items","fields","striped","itemsPerPage","pagination","scopedSlots","item","mso","actions","handleUpdate","window","confirm","deleteThuoc","handleDelete"],"mappings":"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","file":"static/js/15.bab28f4c.chunk.js","sourcesContent":["const randomMaso = (prefix) => {\r\n  let random = Math.floor(Math.random() * 999999) + 1000001;\r\n  random = random + \"\";\r\n  let del_str = random.replace(\"1\", \"\");\r\n  return prefix + del_str;\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [day, month, year].join(\"/\");\r\n};\r\n\r\nconst formatInputDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nconst renderGioitinh = () => {\r\n  var data = [];\r\n  data.push(<option value=\"\">--Select Options--</option>);\r\n  data.push(<option value=\"nam\">Nam</option>);\r\n  data.push(<option value=\"nu\">Nữ</option>);\r\n  data.push(<option value=\"khac\">Khác</option>);\r\n\r\n  return data;\r\n};\r\n\r\nexport { randomMaso, formatDate, renderGioitinh, formatInputDate };\r\n","import {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { randomMaso } from \"src/helpers\";\r\nimport { createThuoc, updateThuoc } from \"src/redux/action-creators\";\r\n\r\nconst ModalThuoc = ({ modal, setModal, oldThuoc }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [thuoc, setThuoc] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e);\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setThuoc({ ...thuoc, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (oldThuoc) {\r\n      setThuoc(oldThuoc);\r\n    }\r\n  }, [oldThuoc]);\r\n\r\n  const handleClick = () => {\r\n    console.log({ thuoc, oldThuoc });\r\n    if (thuoc.ten !== \"\") {\r\n      if (Object.keys(oldThuoc).length === 0) {\r\n        thuoc[\"mso\"] = randomMaso(\"tc\");\r\n\r\n        dispatch(createThuoc(thuoc));\r\n      } else {\r\n        dispatch(updateThuoc(thuoc));\r\n      }\r\n      setThuoc({});\r\n      setModal(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setThuoc({});\r\n    setModal(false);\r\n  };\r\n\r\n  return (\r\n    <CModal show={modal} onClose={closeModal}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Update Thuoc</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Tên thuốc</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput\r\n                id=\"ten\"\r\n                type=\"text\"\r\n                name=\"ten\"\r\n                placeholder=\"Tên thuốc\"\r\n                value={thuoc.ten || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Hướng dẫn sử dụng</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CTextarea\r\n                id=\"huongdansudung\"\r\n                name=\"huongdansudung\"\r\n                placeholder=\"Hướng dẫn sử dụng\"\r\n                value={thuoc.huongdansudung || \"\"}\r\n                onChange={handleChange}\r\n                // style={{ height: \"200px\" }}\r\n                rows={7}\r\n              ></CTextarea>\r\n            </CCol>\r\n          </CFormGroup>\r\n        </CForm>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"primary\" onClick={handleClick}>\r\n          Submit\r\n        </CButton>{\" \"}\r\n        <CButton color=\"secondary\" onClick={closeModal}>\r\n          Cancel\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default ModalThuoc;\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteThuoc, getThuocs } from \"src/redux/action-creators\";\r\nimport ModalThuoc from \"./ModalThuoc\";\r\n\r\nconst Thuoc = () => {\r\n  const dispatch = useDispatch();\r\n  const [oldThuoc, setOldThuoc] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const { thuocs } = useSelector((state) => state.thuoc);\r\n\r\n  useEffect(() => {\r\n    dispatch(getThuocs());\r\n  }, [dispatch]);\r\n\r\n  const handleUpdate = (item) => {\r\n    setOldThuoc(item);\r\n    setModal(true);\r\n  };\r\n\r\n  const handleDelete = (item) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteThuoc(item));\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  console.log(thuocs);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span>Posts</span>\r\n              <CButton color=\"success\" onClick={handleClick}>\r\n                Add Post\r\n              </CButton>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={thuocs}\r\n                fields={[\"Mã Số\", \"Tên thuốc\", \"Hướng dẫn\", \"actions\"]}\r\n                striped\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots={{\r\n                  \"Mã Số\": (item) => <td>{item.mso}</td>,\r\n                  \"Tên thuốc\": (item) => <td>{item.ten}</td>,\r\n                  \"Hướng dẫn\": (item) => <td>{item.huongdansudung}</td>,\r\n                  actions: (item) => (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"warning\"\r\n                        onClick={(e) => handleUpdate(item)}\r\n                      >\r\n                        Edit\r\n                      </CButton>{\" \"}\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        onClick={(e) => handleDelete(item)}\r\n                      >\r\n                        Delete\r\n                      </CButton>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <ModalThuoc modal={modal} setModal={setModal} oldThuoc={oldThuoc} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Thuoc;\r\n"],"sourceRoot":""}