{"version":3,"sources":["helpers/index.jsx","helpers/renderOptions.jsx","views/khambenh/Pdkkb/ModalPdkkb.jsx","views/khambenh/Pdkkb/index.jsx"],"names":["randomMaso","prefix","random","Math","floor","replace","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatInputDate","renderOptions","options","data","push","value","item","_id","mso","msobn","ten","convertPhieukham","phieukham","map","index","hosobenhnhan","ModalPdkkb","modal","setModal","oldPdkkb","dispatch","useDispatch","benhnhans","useSelector","state","benhnhan","useEffect","getBenhnhans","useState","pdkkb","setPdkkb","closeModal","show","onClose","closeButton","action","method","className","row","md","htmlFor","xs","id","name","onChange","e","console","log","target","color","onClick","Object","keys","createPdkkb","updatePdkkb","Pdkkb","setOldPdkkb","pdkkbs","getPdkkbs","lg","style","display","justifyContent","alignItems","items","fields","striped","itemsPerPage","pagination","scopedSlots","email","sodienthoai","actions","handleUpdate","window","confirm","deletePdkkb","handleDelete"],"mappings":"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","file":"static/js/6.e8bfd03a.chunk.js","sourcesContent":["const randomMaso = (prefix) => {\r\n  let random = Math.floor(Math.random() * 999999) + 1000001;\r\n  random = random + \"\";\r\n  let del_str = random.replace(\"1\", \"\");\r\n  return prefix + del_str;\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [day, month, year].join(\"/\");\r\n};\r\n\r\nconst formatInputDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nconst renderGioitinh = () => {\r\n  var data = [];\r\n  data.push(<option value=\"\">--Select Options--</option>);\r\n  data.push(<option value=\"nam\">Nam</option>);\r\n  data.push(<option value=\"nu\">Nữ</option>);\r\n  data.push(<option value=\"khac\">Khác</option>);\r\n\r\n  return data;\r\n};\r\n\r\nexport { randomMaso, formatDate, renderGioitinh, formatInputDate };\r\n","const renderOptions = (options) => {\r\n  const data = [];\r\n  data.push(\r\n    <option value=\"\" key=\"1\">\r\n      -- Select Options --\r\n    </option>\r\n  );\r\n\r\n  for (const item of options) {\r\n    data.push(\r\n      <option value={item._id} key={item._id}>{`${item.mso} - ${\r\n        item.msobn ? item.msobn : \"\"\r\n      } ${item.ten}`}</option>\r\n    );\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nconst convertPhieukham = (phieukham) => {\r\n  const data = [];\r\n  // eslint-disable-next-line array-callback-return\r\n  phieukham.map((item, index) => {\r\n    data.push({\r\n      _id: item._id,\r\n      mso: item.mso,\r\n      msobn: item.hosobenhnhan.mso,\r\n      ten: item.hosobenhnhan.ten,\r\n    });\r\n  });\r\n  return data;\r\n};\r\n\r\nexport { renderOptions, convertPhieukham };\r\n","import {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { randomMaso } from \"src/helpers\";\r\nimport { renderOptions } from \"src/helpers/renderOptions\";\r\nimport {\r\n  createPdkkb,\r\n  getBenhnhans,\r\n  updatePdkkb,\r\n} from \"src/redux/action-creators\";\r\n\r\nconst ModalPdkkb = ({ modal, setModal, oldPdkkb }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { benhnhans } = useSelector((state) => state.benhnhan);\r\n\r\n  useEffect(() => {\r\n    dispatch(getBenhnhans());\r\n  }, [dispatch]);\r\n\r\n  const [pdkkb, setPdkkb] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e);\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setPdkkb({ ...pdkkb, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (oldPdkkb) {\r\n      setPdkkb(oldPdkkb);\r\n    }\r\n  }, [oldPdkkb]);\r\n\r\n  const handleClick = () => {\r\n    console.log({ pdkkb, oldPdkkb });\r\n    if (pdkkb.ten !== \"\") {\r\n      if (Object.keys(oldPdkkb).length === 0) {\r\n        pdkkb[\"mso\"] = randomMaso(\"pd\");\r\n\r\n        dispatch(createPdkkb(pdkkb));\r\n      } else {\r\n        dispatch(updatePdkkb(pdkkb));\r\n      }\r\n      setPdkkb({});\r\n      setModal(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setPdkkb({});\r\n    setModal(false);\r\n  };\r\n\r\n  return (\r\n    <CModal show={modal} onClose={closeModal}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Update Pdkkb</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Khoa</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CSelect\r\n                id=\"hosobenhnhan\"\r\n                name=\"hosobenhnhan\"\r\n                value={pdkkb.hosobenhnhan || \"\"}\r\n                onChange={handleChange}\r\n              >\r\n                {renderOptions(benhnhans)}\r\n              </CSelect>\r\n            </CCol>\r\n          </CFormGroup>\r\n        </CForm>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"primary\" onClick={handleClick}>\r\n          Do Something\r\n        </CButton>{\" \"}\r\n        <CButton color=\"secondary\" onClick={closeModal}>\r\n          Cancel\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default ModalPdkkb;\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPdkkbs, deletePdkkb } from \"src/redux/action-creators\";\r\nimport ModalPdkkb from \"./ModalPdkkb\";\r\n\r\nconst Pdkkb = () => {\r\n  const dispatch = useDispatch();\r\n  const [oldPdkkb, setOldPdkkb] = useState({});\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const { pdkkbs } = useSelector((state) => state.pdkkb);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPdkkbs());\r\n  }, [dispatch]);\r\n\r\n  const handleUpdate = (item) => {\r\n    setOldPdkkb(item);\r\n    setModal(true);\r\n  };\r\n\r\n  const handleDelete = (item) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deletePdkkb(item));\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  console.log(pdkkbs);\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span>Posts</span>\r\n              <CButton color=\"success\" onClick={handleClick}>\r\n                Add Post\r\n              </CButton>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={pdkkbs}\r\n                fields={[\r\n                  \"Mã Số\",\r\n                  \"Tên bệnh nhân\",\r\n                  \"email\",\r\n                  \"Số điện thoại\",\r\n                  \"actions\",\r\n                ]}\r\n                striped\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots={{\r\n                  \"Mã Số\": (item) => <td>{item.mso}</td>,\r\n                  \"Mã Bệnh Nhân\": (item) => <td>{item.hosobenhnhan.mso}</td>,\r\n                  \"Tên bệnh nhân\": (item) => <td>{item.hosobenhnhan.ten}</td>,\r\n                  email: (item) => <td>{item.hosobenhnhan.email}</td>,\r\n                  \"Số điện thoại\": (item) => (\r\n                    <td>{item.hosobenhnhan.sodienthoai}</td>\r\n                  ),\r\n                  actions: (item) => (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"warning\"\r\n                        onClick={(e) => handleUpdate(item)}\r\n                      >\r\n                        Edit\r\n                      </CButton>{\" \"}\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        onClick={(e) => handleDelete(item)}\r\n                      >\r\n                        Delete\r\n                      </CButton>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <ModalPdkkb modal={modal} setModal={setModal} oldPdkkb={oldPdkkb} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pdkkb;\r\n"],"sourceRoot":""}