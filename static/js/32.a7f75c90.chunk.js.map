{"version":3,"sources":["helpers/index.jsx","helpers/renderOptions.jsx","views/khambenh/Bacsi/ModalBacsi.jsx","views/khambenh/Bacsi/index.jsx"],"names":["randomMaso","prefix","random","Math","floor","replace","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatInputDate","renderOptions","options","data","push","value","item","_id","mso","ten","ModalBacsi","modal","setModal","oldBacsi","dispatch","useDispatch","khoas","useSelector","state","khoa","useEffect","getKhoas","useState","bacsi","setBacsi","handleChange","e","console","log","name","target","closeModal","show","onClose","closeButton","action","method","className","row","md","htmlFor","xs","id","required","placeholder","onChange","email","sodienthoai","gioitinh","type","ngaysinh","diachi","color","onClick","Object","keys","createBacsi","updateBacsi","Bacsi","setOldBacsi","bacsis","getBacsis","lg","style","display","justifyContent","alignItems","items","fields","striped","itemsPerPage","pagination","scopedSlots","Khoa","actions","handleUpdate","window","confirm","deleteBacsi","handleDelete"],"mappings":"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","file":"static/js/32.a7f75c90.chunk.js","sourcesContent":["const randomMaso = (prefix) => {\r\n  let random = Math.floor(Math.random() * 999999) + 1000001;\r\n  random = random + \"\";\r\n  let del_str = random.replace(\"1\", \"\");\r\n  return prefix + del_str;\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [day, month, year].join(\"/\");\r\n};\r\n\r\nconst formatInputDate = (date) => {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n};\r\n\r\nconst renderGioitinh = () => {\r\n  var data = [];\r\n  data.push(<option value=\"\">--Select Options--</option>);\r\n  data.push(<option value=\"nam\">Nam</option>);\r\n  data.push(<option value=\"nu\">Nữ</option>);\r\n  data.push(<option value=\"khac\">Khác</option>);\r\n\r\n  return data;\r\n};\r\n\r\nexport { randomMaso, formatDate, renderGioitinh, formatInputDate };\r\n","const renderOptions = (options) => {\r\n  const data = [];\r\n  data.push(\r\n    <option value=\"\" key=\"1\">\r\n      -- Select Options --\r\n    </option>\r\n  );\r\n\r\n  for (const item of options) {\r\n    data.push(\r\n      <option\r\n        value={item._id}\r\n        key={item._id}\r\n      >{`${item.mso} - ${item.ten}`}</option>\r\n    );\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport { renderOptions };\r\n","import {\r\n  CButton,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { formatInputDate, randomMaso } from \"src/helpers\";\r\nimport { renderOptions } from \"src/helpers/renderOptions\";\r\nimport { createBacsi, getKhoas, updateBacsi } from \"src/redux/action-creators\";\r\n\r\nconst ModalBacsi = ({ modal, setModal, oldBacsi }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { khoas } = useSelector((state) => state.khoa);\r\n\r\n  useEffect(() => {\r\n    dispatch(getKhoas());\r\n  }, [dispatch]);\r\n\r\n  const [bacsi, setBacsi] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    console.log(bacsi);\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setBacsi({ ...bacsi, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (oldBacsi) {\r\n      setBacsi(oldBacsi);\r\n    }\r\n  }, [oldBacsi]);\r\n\r\n  const handleClick = () => {\r\n    console.log({ bacsi, oldBacsi });\r\n    if (bacsi.ten !== \"\") {\r\n      if (Object.keys(oldBacsi).length === 0) {\r\n        bacsi[\"mso\"] = randomMaso(\"bs\");\r\n\r\n        dispatch(createBacsi(bacsi));\r\n      } else {\r\n        dispatch(updateBacsi(bacsi));\r\n      }\r\n      setBacsi({});\r\n      setModal(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setBacsi({});\r\n    setModal(false);\r\n  };\r\n\r\n  return (\r\n    <CModal show={modal} onClose={closeModal}>\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Update Bacsi</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Tên</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput\r\n                id=\"ten\"\r\n                name=\"ten\"\r\n                required\r\n                placeholder=\"Tên Bacsi\"\r\n                value={bacsi.ten || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Email</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput\r\n                id=\"email\"\r\n                name=\"email\"\r\n                required\r\n                placeholder=\"Email\"\r\n                value={bacsi.email || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Số điện thoại</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput\r\n                id=\"sodienthoai\"\r\n                name=\"sodienthoai\"\r\n                required\r\n                placeholder=\"Số Điện Thoại\"\r\n                value={bacsi.sodienthoai || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Giới tính</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CSelect\r\n                id=\"gioitinh\"\r\n                name=\"gioitinh\"\r\n                value={bacsi.gioitinh || \"\"}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">--Select Options--</option>\r\n                <option value=\"nam\">Nam</option>\r\n                <option value=\"nu\">Nữ</option>\r\n                <option value=\"khac\">Khác</option>\r\n              </CSelect>\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Ngày sinh</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput\r\n                id=\"ngaysinh\"\r\n                type=\"date\"\r\n                name=\"ngaysinh\"\r\n                placeholder=\"Ngày sinh\"\r\n                value={formatInputDate(bacsi.ngaysinh) || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Địa chỉ</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput\r\n                id=\"diachi\"\r\n                name=\"diachi\"\r\n                placeholder=\"Địa chỉ\"\r\n                value={bacsi.diachi || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"text-input\">Khoa</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CSelect\r\n                id=\"khoa\"\r\n                name=\"khoa\"\r\n                value={bacsi.khoa || \"\"}\r\n                onChange={handleChange}\r\n              >\r\n                {renderOptions(khoas)}\r\n              </CSelect>\r\n            </CCol>\r\n          </CFormGroup>\r\n        </CForm>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"primary\" onClick={handleClick}>\r\n          Do Something\r\n        </CButton>{\" \"}\r\n        <CButton color=\"secondary\" onClick={closeModal}>\r\n          Cancel\r\n        </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  );\r\n};\r\n\r\nexport default ModalBacsi;\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { formatDate } from \"src/helpers\";\r\nimport { deleteBacsi, getBacsis } from \"src/redux/action-creators\";\r\nimport ModalBacsi from \"./ModalBacsi\";\r\n// import PostForm from \"./PostForm\";\r\n\r\nconst Bacsi = () => {\r\n  const dispatch = useDispatch();\r\n  const [modal, setModal] = useState(false);\r\n  const [oldBacsi, setOldBacsi] = useState({});\r\n\r\n  const { bacsis } = useSelector((state) => state.bacsi);\r\n\r\n  useEffect(() => {\r\n    dispatch(getBacsis());\r\n  }, [dispatch]);\r\n\r\n  console.log(bacsis);\r\n\r\n  const handleUpdate = (item) => {\r\n    setOldBacsi(item);\r\n    setModal(true);\r\n  };\r\n\r\n  const handleDelete = (item) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      console.log(\"abc\");\r\n      dispatch(deleteBacsi(item));\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setModal(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <span>Posts</span>\r\n              <CButton color=\"success\" onClick={handleClick}>\r\n                Add Post\r\n              </CButton>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CDataTable\r\n                items={bacsis}\r\n                fields={[\r\n                  \"Mã Số\",\r\n                  \"Tên bác sĩ\",\r\n                  \"Số Điện Thoại\",\r\n                  \"email\",\r\n                  \"Địa Chỉ\",\r\n                  \"Giới tính\",\r\n                  \"Ngày Sinh\",\r\n                  \"Khoa\",\r\n                  \"actions\",\r\n                ]}\r\n                striped\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots={{\r\n                  \"Mã Số\": (item) => <td>{item.mso}</td>,\r\n                  \"Tên bác sĩ\": (item) => <td>{item.ten}</td>,\r\n                  \"Số Điện Thoại\": (item) => <td>{item.sodienthoai}</td>,\r\n                  \"Địa Chỉ\": (item) => <td>{item.diachi}</td>,\r\n                  \"Giới tính\": (item) => <td>{item.gioitinh}</td>,\r\n                  \"Ngày Sinh\": (item) => <td>{formatDate(item.ngaysinh)}</td>,\r\n                  Khoa: (item) => <td>{item.khoa ? item.khoa.ten : \"\"}</td>,\r\n                  actions: (item) => (\r\n                    <td>\r\n                      <CButton\r\n                        color=\"warning\"\r\n                        onClick={(e) => handleUpdate(item)}\r\n                      >\r\n                        Edit\r\n                      </CButton>{\" \"}\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        onClick={(e) => handleDelete(item)}\r\n                      >\r\n                        Delete\r\n                      </CButton>\r\n                    </td>\r\n                  ),\r\n                }}\r\n              />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <ModalBacsi modal={modal} setModal={setModal} oldBacsi={oldBacsi} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Bacsi;\r\n"],"sourceRoot":""}